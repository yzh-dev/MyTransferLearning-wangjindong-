Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\pydevd.py", line 1496, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 107, in <module>
    train_loaders, eval_loaders = get_img_dataloader(args)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\datautil\getdataloader.py", line 19, in get_img_dataloader
    tedatalist.append(ImageDataset(args.dataset, args.task, args.data_dir,
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\datautil\imgdata\imgdataload.py", line 12, in __init__
    self.imgs = ImageFolder(root_dir+domain_name).imgs
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 309, in __init__
    super().__init__(
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 144, in __init__
    classes, class_to_idx = self.find_classes(self.root)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 218, in find_classes
    return find_classes(directory)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 40, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
FileNotFoundError: [WinError 3] 系统找不到指定的路径。: 'D:\\ML\\Dataset\\OfficeHomeamazon'
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\pydevd.py", line 1496, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 107, in <module>
    train_loaders, eval_loaders = get_img_dataloader(args)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\datautil\getdataloader.py", line 19, in get_img_dataloader
    tedatalist.append(ImageDataset(args.dataset, args.task, args.data_dir,
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\datautil\imgdata\imgdataload.py", line 12, in __init__
    self.imgs = ImageFolder(root_dir+domain_name).imgs
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 309, in __init__
    super().__init__(
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 144, in __init__
    classes, class_to_idx = self.find_classes(self.root)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 218, in find_classes
    return find_classes(directory)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 40, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
FileNotFoundError: [WinError 3] 系统找不到指定的路径。: 'D:\\ML\\Dataset\\OfficeHome\\amazon'
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\pydevd.py", line 1496, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 141, in <module>
    step_vals = algorithm.update(minibatches_device, opt, sch)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 30, in update
    domain_loss = F.cross_entropy(self.predict(domain_x), domain_y)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 50, in predict
    return self.network(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\container.py", line 204, in forward
    input = module(input)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\network\img_network.py", line 47, in forward
    x = self.conv1(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\pydevd.py", line 1496, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 141, in <module>
    step_vals = algorithm.update(minibatches_device, opt, sch)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 29, in update
    loss = F.cross_entropy(self.predict(all_x), all_y)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 39, in predict
    return self.network(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\container.py", line 204, in forward
    input = module(input)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\network\common_network.py", line 37, in forward
    x = self.fc(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: CUDA error: CUBLAS_STATUS_ALLOC_FAILED when calling `cublasCreate(handle)`
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Traceback (most recent call last):
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 141, in <module>
    step_vals = algorithm.update(minibatches_device, opt, sch)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 29, in update
    loss = F.cross_entropy(self.predict(all_x), all_y)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 39, in predict
    return self.network(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\container.py", line 204, in forward
    input = module(input)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\network\common_network.py", line 37, in forward
    x = self.fc(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: CUDA error: CUBLAS_STATUS_ALLOC_FAILED when calling `cublasCreate(handle)`
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
===========epoch 0===========
class_loss:0.0385
train_acc:0.9936,valid_acc:0.9598,target_acc:0.5687
total cost time: 78.8192
Environment:
	Python: 3.10.8
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:GroupDRO
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:GroupDRO
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:GroupDRO
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:MLDG
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:RSC
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:RSC
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:RSC
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:VREx
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:VREx
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ANDMask
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ANDMask
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:DIFEX
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

start training fft teacher net
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:DIFEX
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

start training fft teacher net
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:DIFEX
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

start training fft teacher net
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:DIFEX
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
===========epoch 0===========
class_loss:0.0385
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:120
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\IPython\core\interactiveshell.py", line 3442, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-2-fb0da5e9af77>", line 1, in <module>
    runfile('D:\\ML\\Projects\\TransferLearning\\MyTransferLearning-wangjindong-\\code\\DeepDG\\train.py', wdir='D:\\ML\\Projects\\TransferLearning\\MyTransferLearning-wangjindong-\\code\\DeepDG')
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_bundle\pydev_umd.py", line 198, in runfile
    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 111, in <module>
    step_vals = algorithm.update(minibatches_device, opt, sch)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 27, in update
    loss = F.cross_entropy(self.predict(all_x), all_y)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\alg\algs\ERM.py", line 37, in predict
    return self.network(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\container.py", line 204, in forward
    input = module(input)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\network\common_network.py", line 36, in forward
    x = self.fc(x)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: CUDA error: CUBLAS_STATUS_ALLOC_FAILED when calling `cublasCreate(handle)`
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:office
data_dir:D:\ML\Dataset\office31\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:20
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet50
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['amazon', 'dslr', 'webcam']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:31
domain_num:3

===========start training===========
===========epoch 0===========
class_loss:0.0385
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
Traceback (most recent call last):
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\IPython\core\interactiveshell.py", line 3442, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-2-fb0da5e9af77>", line 1, in <module>
    runfile('D:\\ML\\Projects\\TransferLearning\\MyTransferLearning-wangjindong-\\code\\DeepDG\\train.py', wdir='D:\\ML\\Projects\\TransferLearning\\MyTransferLearning-wangjindong-\\code\\DeepDG')
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_bundle\pydev_umd.py", line 198, in runfile
    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2022.3.3\plugins\python\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\train.py", line 77, in <module>
    train_loaders, eval_loaders = get_img_dataloader(args)
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\datautil\getdataloader.py", line 19, in get_img_dataloader
    tedatalist.append(ImageDataset(args.dataset, args.task, args.data_dir,
  File "D:\ML\Projects\TransferLearning\MyTransferLearning-wangjindong-\code\DeepDG\datautil\imgdata\imgdataload.py", line 12, in __init__
    self.imgs = ImageFolder(root_dir+domain_name).imgs
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 309, in __init__
    super().__init__(
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 144, in __init__
    classes, class_to_idx = self.find_classes(self.root)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 218, in find_classes
    return find_classes(directory)
  File "C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\datasets\folder.py", line 40, in find_classes
    classes = sorted(entry.name for entry in os.scandir(directory) if entry.is_dir())
FileNotFoundError: [WinError 3] 系统找不到指定的路径。: 'D:\\ML\\Dataset\\PACS1\\amazon'
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:16
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:PACS
data_dir:D:\ML\Dataset\PACS1\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:20
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet18
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[0]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['art_painting', 'cartoon', 'photo', 'sketch']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:7
domain_num:4

===========start training===========
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ERM
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:3
classifier:linear
data_file:
dataset:PACS
data_dir:D:\ML\Dataset\PACS1\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:20
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet18
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[1]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['art_painting', 'cartoon', 'photo', 'sketch']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:7
domain_num:4

===========start training===========
===========epoch 0===========
class_loss:0.1265
train_acc:0.9298,valid_acc:0.9189,target_acc:0.6822
total cost time: 121.0126
===========epoch 3===========
class_loss:0.0353
train_acc:0.9837,valid_acc:0.9444,target_acc:0.7218
total cost time: 322.5843
===========epoch 6===========
class_loss:0.0163
train_acc:0.9933,valid_acc:0.9499,target_acc:0.7338
total cost time: 523.3341
===========epoch 9===========
class_loss:0.0369
train_acc:0.9949,valid_acc:0.9513,target_acc:0.7658
total cost time: 722.7843
===========epoch 12===========
class_loss:0.0166
train_acc:0.9956,valid_acc:0.9572,target_acc:0.7577
total cost time: 921.1547
manually descrease lr
Environment:
	Python: 3.10.4
	PyTorch: 1.13.1
	Torchvision: 0.14.1
	CUDA: 11.7
	CUDNN: 8500
	NumPy: 1.23.5
	PIL: 9.3.0
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
C:\ProgramData\Anaconda3\envs\mmlab\lib\site-packages\torchvision\models\_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
=======hyper-parameter used========
==========================================
algorithm:ANDMask
alpha:1
anneal_iters:500
batch_size:32
beta:1
beta1:0.5
bottleneck:256
checkpoint_freq:1
classifier:linear
data_file:
dataset:PACS
data_dir:D:\ML\Dataset\PACS1\
dis_hidden:256
disttype:2-norm
gpu_id:0
groupdro_eta:1
inner_lr:0.01
lam:1
layer:bn
lr:0.01
lr_decay:0.75
lr_decay1:1.0
lr_decay2:1.0
lr_gamma:0.0003
max_epoch:20
mixupalpha:0.2
mldg_beta:1
mmd_gamma:1
momentum:0.9
net:resnet18
N_WORKERS:4
rsc_f_drop_factor:0.3333333333333333
rsc_b_drop_factor:0.3333333333333333
save_model_every_checkpoint:False
schuse:False
schusech:cos
seed:0
split_style:strat
task:img_dg
tau:1
test_envs:[1]
output:train_output
weight_decay:0.0005
steps_per_epoch:100
domains:['art_painting', 'cartoon', 'photo', 'sketch']
img_dataset:{'office': ['amazon', 'dslr', 'webcam'], 'office-caltech': ['amazon', 'dslr', 'webcam', 'caltech'], 'office-home': ['Art', 'Clipart', 'Product', 'Real_World'], 'PACS': ['art_painting', 'cartoon', 'photo', 'sketch'], 'dg5': ['mnist', 'mnist_m', 'svhn', 'syn', 'usps'], 'VLCS': ['Caltech101', 'LabelMe', 'SUN09', 'VOC2007']}
input_shape:(3, 224, 224)
num_classes:7
domain_num:4

===========start training===========
